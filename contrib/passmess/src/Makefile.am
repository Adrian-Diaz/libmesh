
AM_LDFLAGS = -version-info 0:0:0

#----------------------------------------------
# List of source files to build dynamic library
#----------------------------------------------
passmess_SOURCES =

# parallel
passmess_SOURCES += parallel/src/communicator.C
passmess_SOURCES += parallel/src/message_tag.C
passmess_SOURCES += parallel/src/request.C

# utilities
passmess_SOURCES += utilities/src/passmess_assert.C
passmess_SOURCES += utilities/src/passmess_init.C
passmess_SOURCES += utilities/src/passmess_version.C

#------------------------------------------
# List of library configurations to compile
#------------------------------------------

lib_LTLIBRARIES =
bin_PROGRAMS    =

if BUILD_DBG_MODE
  lib_LTLIBRARIES            += libpassmess_dbg.la
  libpassmess_dbg_la_SOURCES  = $(passmess_SOURCES)
  libpassmess_dbg_la_CPPFLAGS = $(CPPFLAGS_DBG) $(AM_CPPFLAGS)
  libpassmess_dbg_la_CXXFLAGS = $(CXXFLAGS_DBG)
  bin_PROGRAMS               += passmess_version-dbg
endif

if BUILD_DEVEL_MODE
  lib_LTLIBRARIES              += libpassmess_devel.la
  libpassmess_devel_la_SOURCES  = $(passmess_SOURCES)
  libpassmess_devel_la_CPPFLAGS = $(CPPFLAGS_DEVEL) $(AM_CPPFLAGS)
  libpassmess_devel_la_CXXFLAGS = $(CXXFLAGS_DEVEL)
  bin_PROGRAMS                 += passmess_version-devel
endif

if BUILD_OPT_MODE
  lib_LTLIBRARIES            += libpassmess_opt.la
  libpassmess_opt_la_SOURCES  = $(passmess_SOURCES)
  libpassmess_opt_la_CPPFLAGS = $(CPPFLAGS_OPT) $(AM_CPPFLAGS)
  libpassmess_opt_la_CXXFLAGS = $(CXXFLAGS_OPT)
  bin_PROGRAMS               += passmess_version-opt
endif

if BUILD_PROF_MODE
  lib_LTLIBRARIES             += libpassmess_prof.la
  libpassmess_prof_la_SOURCES  = $(passmess_SOURCES)
  libpassmess_prof_la_CPPFLAGS = $(CPPFLAGS_PROF) $(AM_CPPFLAGS)
  libpassmess_prof_la_CXXFLAGS = $(CXXFLAGS_PROF)
endif

if BUILD_OPROF_MODE
  lib_LTLIBRARIES              += libpassmess_oprof.la
  libpassmess_oprof_la_SOURCES  = $(passmess_SOURCES)
  libpassmess_oprof_la_CPPFLAGS = $(CPPFLAGS_OPROF) $(AM_CPPFLAGS)
  libpassmess_oprof_la_CXXFLAGS = $(CXXFLAGS_OPROF)
endif


#----------------------------
# INCLUDES we want distributed
#----------------------------
includedir = $(prefix)/include/passmess
include_HEADERS =

# algorithms
include_HEADERS += algorithms/include/passmess/parallel_sync.h

# parallel
include_HEADERS += parallel/include/passmess/attributes.h
include_HEADERS += parallel/include/passmess/communicator.h
include_HEADERS += parallel/include/passmess/data_type.h
include_HEADERS += parallel/include/passmess/message_tag.h
include_HEADERS += parallel/include/passmess/op_function.h
include_HEADERS += parallel/include/passmess/packing.h
include_HEADERS += parallel/include/passmess/parallel_communicator_specializations
include_HEADERS += parallel/include/passmess/parallel_implementation.h
include_HEADERS += parallel/include/passmess/post_wait_copy_buffer.h
include_HEADERS += parallel/include/passmess/post_wait_delete_buffer.h
include_HEADERS += parallel/include/passmess/post_wait_dereference_shared_ptr.h
include_HEADERS += parallel/include/passmess/post_wait_dereference_tag.h
include_HEADERS += parallel/include/passmess/post_wait_free_buffer.h
include_HEADERS += parallel/include/passmess/post_wait_unpack_buffer.h
include_HEADERS += parallel/include/passmess/post_wait_work.h
include_HEADERS += parallel/include/passmess/request.h
include_HEADERS += parallel/include/passmess/standard_type.h
include_HEADERS += parallel/include/passmess/status.h

# utilities
include_HEADERS += utilities/include/passmess/ignore_warnings.h
include_HEADERS += utilities/include/passmess/passmess.h
include_HEADERS += utilities/include/passmess/passmess_assert.h
include_HEADERS += utilities/include/passmess/passmess_call_mpi.h
include_HEADERS += utilities/include/passmess/passmess_init.h
include_HEADERS += utilities/include/passmess/restore_warnings.h

# Needs to be builddir since this is generated by configure
include_HEADERS += $(top_builddir)/src/utilities/include/passmess/passmess_version.h
include_HEADERS += $(top_builddir)/src/utilities/include/passmess/passmess_config.h

# Version app
passmess_version_opt_SOURCES = apps/version.C
passmess_version_opt_LDADD = libpassmess_opt.la

passmess_version_devel_SOURCES = apps/version.C
passmess_version_devel_LDADD = libpassmess_devel.la

passmess_version_dbg_SOURCES = apps/version.C
passmess_version_dbg_LDADD = libpassmess_dbg.la

#--------------------------------------
#Local Directories to include for build
#--------------------------------------
AM_CPPFLAGS  = $(passmess_optional_INCLUDES)
AM_CPPFLAGS += -I$(top_srcdir)/src/algorithms/include
AM_CPPFLAGS += -I$(top_srcdir)/src/parallel/include
AM_CPPFLAGS += -I$(top_srcdir)/src/utilities/include
AM_CPPFLAGS += -I$(top_builddir)/src/utilities/include #passmess_version.h

LIBS         = $(passmess_optional_LIBS)
